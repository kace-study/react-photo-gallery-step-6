{"version":3,"sources":["components/Header/Header.js","components/Home/Home.js","components/SearchBox/SearchBox.js","components/Photo/Photo.js","components/PhotoList/PhotoList.js","components/Gallery/Gallery.js","components/Footer/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleNavbar","bind","assertThisInitialized","state","collapsed","setState","react_default","a","createElement","reactstrap_es","fixed","color","dark","href","className","onClick","isOpen","navbar","React","Component","Home","_ref","onRouteChange","SearchBox","onChange","e","keyword","target","value","onKeyPress","key","search","_this2","type","name","placeholder","addonType","Photo","photo","top","width","height","src","webformatURL","url","pageURL","window","open","user","PhotoList","photos","map","id","md","components_Photo_Photo","renderPhoto","Gallery","toLowerCase","fetch","method","then","response","json","data","hits","catch","console","log","size","offset","components_SearchBox_SearchBox","components_PhotoList_PhotoList","Footer","Date","getFullYear","App","route","components_Header_Header","components_Gallery_Gallery","components_Home_Home","components_Footer_Footer","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.509da631.chunk.js","sourcesContent":["import React from 'react';\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink, Container } from 'reactstrap';\n\nclass Header extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.toggleNavbar = this.toggleNavbar.bind(this);\n    this.state = {\n      collapsed: true\n    };\n  }\n\n  toggleNavbar() {\n    this.setState({\n      collapsed: !this.state.collapsed\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Navbar fixed=\"top\" color=\"dark\" dark>\n          <Container>\n            <NavbarBrand href=\"/\" className=\"mr-auto\">Kace Gallery</NavbarBrand>\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\n            <Collapse isOpen={!this.state.collapsed} navbar>\n              <Nav navbar>\n                <NavItem>\n                  <NavLink href=\"https://twitter.com/ace_tech_note?lang=ja\">Twitter</NavLink>\n                </NavItem>\n                <NavItem>\n                  <NavLink href=\"https://github.com/kace-study\">GitHub</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default Header;","import React from 'react';\nimport { Button, Container } from 'reactstrap';\nimport './Home.css';\n\nconst Home = ({ onRouteChange }) =>  {\n  return (\n    <div className=\"home\">\n      <Container className=\"text-center text-white\">\n        <h1>MUST WATCH</h1>\n        <p>There is no one who loves pain itself, who seeks after it and wants to have it, simply because it is pain...</p>\n        <Button \n          color=\"default\" \n          className=\"mt-5 btn-ghost btn-white\"\n          onClick={() => onRouteChange('gallery')}>\n          More Detail\n        </Button>\n      </Container>\n    </div>\n  );\n}\n\nexport default Home;","import React from 'react';\nimport { InputGroup, InputGroupAddon, Input, Button } from 'reactstrap';\n\nclass SearchBox extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { keyword: '' } \n  }\n\n  onChange = (e) => {\n    this.setState({ keyword: e.target.value });\n  }\n\n  onKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      this.props.search(this.state.keyword);\n    }\n  }\n\n  onClick = () => {\n    this.props.search(this.state.keyword);\n  }\n\n  render() {\n    return (\n      <InputGroup>\n        <Input type=\"search\" name=\"search\" placeholder=\"Enter Keyword!\"\n          onChange={(e) => this.onChange(e)}\n          onKeyPress={(e) => this.onKeyPress(e)}>\n        </Input>\n        <InputGroupAddon addonType=\"append\">\n          <Button color=\"dark\" onClick={() => this.onClick()}>検索</Button>\n        </InputGroupAddon>\n      </InputGroup>\n    );\n  }\n}\n\nexport default SearchBox;","import React from 'react';\nimport { Card, CardImg, CardBody, CardText } from 'reactstrap';\nimport './Photo.css';\n\nconst Photo = ({ photo }) =>  {\n\n  const onClick = (url) => {\n    window.open(url, '_blank');\n  }\n\n  return (\n    <Card className=\"mb-3 text-center\">\n      <CardImg \n        top \n        width=\"250px\" \n        height=\"250px\" \n        src={photo.webformatURL}\n        onClick={() => onClick(photo.pageURL)} />\n      <CardBody>\n        <CardText>{photo.user}</CardText>\n      </CardBody>\n    </Card>\n  );\n}\n\nexport default Photo;","import React from 'react';\nimport { Row, Col } from 'reactstrap';\nimport Photo from '../Photo/Photo';\n\nconst PhotoList = ({ photos }) =>  {\n\n  const renderPhoto = (photo) => {\n    return <Col key={photo.id} md=\"4\"><Photo photo={photo} /></Col>;\n  }\n\n  return (\n    <Row>\n        { \n          // \n          photos.map((photo) => {\n            return renderPhoto(photo);\n          })\n        }\n    </Row>\n  );\n}\n\nexport default PhotoList;","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'reactstrap';\nimport SearchBox from '../SearchBox/SearchBox';\nimport PhotoList from '../PhotoList/PhotoList';\nimport './Gallery.css';\n\nclass Gallery extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { photos: [] }\n  }\n\n  componentDidMount() {\n    this.search('');\n  }\n\n  search = (keyword) => {\n    const param = { method: 'GET' };\n    const url = 'https://pixabay.com/api/?key=' + process.env.REACT_APP_API_KEY \n      + '&q=' + keyword.toLowerCase() \n      + '&image_type=photo' \n      + '&min_width=200&min_height=200';\n    fetch(url, param)\n      .then(response => response.json())\n      .then(data => {\n        this.setState({ photos: data.hits });\n      })\n      .catch(console.log);\n  }\n\n  render() {\n    return (\n        <Container className=\"gallery-container\">\n          <Row className=\"mb-5\">\n            <Col md={{ size: 6, offset: 3 }}>\n              <SearchBox search={this.search}/>  \n            </Col>\n          </Row>\n          <PhotoList photos={this.state.photos} />\n        </Container>\n    );\n  }\n}\n\nexport default Gallery;","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Footer = () => {\n\n  const getYear = () =>  {\n    return new Date().getFullYear();\n  }\n\n  return (\n    <footer id=\"footer\" className='pt-3 text-center'>\n      <Container>\n        <Row>\n          <Col>\n            <p className=\"small\">\n              Kace Gallery created by kace, Copyright &copy; {getYear()}\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </footer>\n  );\n}\n\nexport default Footer;","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport Gallery from './components/Gallery/Gallery';\nimport Footer from './components/Footer/Footer';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { route: 'home' };\n  }\n\n  onRouteChange = (route) => {\n    this.setState({ route: route });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        { this.state.route === 'gallery' ? \n          <Gallery /> :\n          <Home onRouteChange={this.onRouteChange}/>\n        }\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}